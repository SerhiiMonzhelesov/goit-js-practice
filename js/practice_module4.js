// –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
// // createProduct(obj, callback) - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –±–µ–∑ id, –∞ —Ç–∞–∫–æ–∂ –∫–æ–ª–ª–±–µ–∫. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å id —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.
// // logProduct(product) - –∫–æ–ª–±–±–µ–∫ –ø—Ä–∏–π–º–∞—é—á–∏–π –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—é—á–∏–π –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å
// // logTotalPrice(product) - –∫–æ–ª–±–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—ñ—é—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å
// function createProduct(obj, callback) {
//   const product = {
//     id: Date.now(),
//     ...obj,
//   };
//   // callback(product);
//   console.log(callback);
// }

// function logProduct(goods) {
//   console.log(goods);
// }

// function logTotalPrice({ quantity, price }) {
//   console.log(quantity * price);
// }

// createProduct({ name: "üçé", price: 30, quantity: 3 }, logProduct);
// createProduct({ name: "üçã", price: 20, quantity: 5 }, logTotalPrice);

// =====================================================

//–í –æ–±'—î–∫—Ç–∞ account —î –º–µ—Ç–æ–¥–∏ withdraw(amount, onSuccess, onError) —Ç–∞ deposit(amount, onSuccess, onError),
 //–¥–µ –ø–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ü–µ —Å—É–º–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó, –∞ –¥—Ä—É–≥–∏–π —Ç–∞ —Ç—Ä–µ—Ç—ñ–π - –∫–æ–ª–ª–±–µ–∫–∏.
//–ú–µ—Ç–æ–¥ withdraw –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT –∞–±–æ this.balance, —ñ onSuccess –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.
//–ú–µ—Ç–æ–¥ deposit –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT –∞–±–æ –º–µ–Ω—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é, —ñ onSuccess –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.
// const TRANSACTION_LIMIT = 1000;

// const account = {
//   username: 'Jacob',
//   balance: 1000,
//   withdraw(amount, onSuccess, onError) {
//     if (amount > TRANSACTION_LIMIT) {
//       onError("perevysheno limit")
//   console.log(onError);
//     } else if (amount > this.balance) {
//       onError("nedostatno na rahunku")
//     }
//     else {
//       this.balance -= amount;
//       onSuccess(`na rahunku ${this.balance}`)
//     }
    

//   },
//   deposit(amount, onSuccess, onError) {

//     if (amount > TRANSACTION_LIMIT) {
//       onError("perevysheno limit")
//     }
//     else if (amount <= 0) {
//       onError("summ maje buty bilshe 0")
//     }
//     else {
//       this.balance += amount;
//       onSuccess(`na washomu rachunku ${this.balance}`)
//     }

//   },
// };

// function handleSuccess(message) {
//   console.log(`‚úÖ Success! ${message}`);
// }

// function handleError(message) {
//   console.log(`‚ùå Error! ${message}`);
// }



// account.withdraw(2000, handleSuccess, handleError);
// account.withdraw(600, handleSuccess, handleError);
// account.withdraw(300, handleSuccess, handleError);
// account.deposit(1700, handleSuccess, handleError);
// account.deposit(0, handleSuccess, handleError);
// account.deposit(-600, handleSuccess, handleError);
// account.deposit(600, handleSuccess, handleError);

// ==================================================

//–°—Ç–≤–æ—Ä–∏ —Å—Ç—Ä—ñ–ª–æ—á–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é logItems(), —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤–∞, –∑—Ä–æ–±–∏ –ø–µ—Ä–µ–±—ñ—Ä –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach().


// const logItems = (arr) => {
//   arr.forEach((el, idx, arr)=>{
//     console.log(idx +1, el)
//   })
// }



// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

//===========================================

// const cal—ÅulateAverage = (...rest) => {
// //console.log(rest);
// let average = 0;
// rest.forEach(el => average += el);
// return average/rest.length;

// }

// console.log(cal—ÅulateAverage(1, 2, 3, 4)); // 2.5
// console.log(cal—ÅulateAverage(14, 8, 2)); // 8
// console.log(cal—ÅulateAverage(27, 43, 2, 8, 36)); // 23.2

// ==============================================================

// const cal—ÅulateAverage = (...rest) => {
// //console.log(rest);
// let average = 0;
// const result = rest.forEach((el, __, arr) => average += el);
// const result2 = rest.map(el => average + el);
// console.log(result2);
// return average/rest.length;

// }

// console.log(cal—ÅulateAverage(1, 2, 3, 4)); // 2.5
// console.log(cal—ÅulateAverage(14, 8, 2)); // 8
// console.log(cal—ÅulateAverage(27, 43, 2, 8, 36)); // 23.2


// ====================================================================

// –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –ø–æ—à—É–∫—É –ø–æ —Ç–æ–≤–∞—Ä—É, —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —Ä—è–¥–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É + —Ü—ñ–Ω–∞
// —Ñ—É–Ω–∫—Ü—ñ—è –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä ID —Ç–æ–≤–∞—Ä—É

// const instruments = [
//   {
//     id: 1,
//     img: 'https://static.dnipro-m.ua/cache/products/1754/catalog_origin_141546.jpg',
//     name: '–ú–æ–ª–æ—Ç–æ–∫',
//     price: 150,
//   },
//   {
//     id: 2,
//     img: 'https://static.dnipro-m.ua/cache/products/5098/catalog_origin_195568.jpg',
//     name: '–ü–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä',
//     price: 3000,
//   },
//   {
//     id: 3,
//     img: 'https://static.dnipro-m.ua/cache/products/2023/catalog_origin_200763.jpg',
//     name: '–†—ñ–≤–µ–Ω—å',
//     price: 2000,
//   },
// ];

// function findTools(toolId) {
//   let message = 'not found';
//   instruments.forEach(({ id, name, price }) => {
//     if (id === toolId) {
//       //   console.log(name);
//       message = `${name}, ${price}`;
//       //   console.log(message);
//     }
//     console.log(name);
//   });
//   return message;
// }

// console.log(findTools(1));

// =====================================================================

const users = [
    {
      id: '701b29c3-b35d-4cf1-a5f6-8b12b29a5081',
      name: 'Moore Hensley',
      email: 'moorehensley@indexia.com',
      eyeColor: 'blue',
      friends: ['Sharron Pace'],
      isActive: false,
      balance: 2811,
      skills: ['ipsum', 'lorem'],
      gender: 'male',
      age: 37,
    },
    {
      id: '7a3cbd18-57a1-4534-8e12-1caad921bda1',
      name: 'Sharlene Bush',
      email: 'sharlenebush@tubesys.com',
      eyeColor: 'blue',
      friends: ['Briana Decker', 'Sharron Pace'],
      isActive: true,
      balance: 3821,
      skills: ['tempor', 'mollit', 'commodo', 'veniam', 'laborum'],
      gender: 'female',
      age: 34,
    },
    {
      id: '88beb2f3-e4c2-49f3-a0a0-ecf957a95af3',
      name: 'Ross Vazquez',
      email: 'rossvazquez@xinware.com',
      eyeColor: 'green',
      friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
      isActive: false,
      balance: 3793,
      skills: ['nulla', 'anim', 'proident', 'ipsum', 'elit'],
      gender: 'male',
      age: 24,
    },
    {
      id: '249b6175-5c30-44c6-b154-f120923736f5',
      name: 'Elma Head',
      email: 'elmahead@omatom.com',
      eyeColor: 'green',
      friends: ['Goldie Gentry', 'Aisha Tran'],
      isActive: true,
      balance: 2278,
      skills: ['adipisicing', 'irure', 'velit'],
      gender: 'female',
      age: 21,
    },
    {
      id: '334f8cb3-eb04-45e6-abf4-4935dd439b70',
      name: 'Carey Barr',
      email: 'careybarr@nurali.com',
      eyeColor: 'blue',
      friends: ['Jordan Sampson', 'Eddie Strong'],
      isActive: true,
      balance: 3951,
      skills: ['ex', 'culpa', 'nostrud'],
      gender: 'male',
      age: 27,
    },
    {
      id: '150b00fb-dd82-427d-9faf-2879ea87c695',
      name: 'Blackburn Dotson',
      email: 'blackburndotson@furnigeer.com',
      eyeColor: 'brown',
      friends: ['Jacklyn Lucas', 'Linda Chapman'],
      isActive: false,
      balance: 1498,
      skills: ['non', 'amet', 'ipsum'],
      gender: 'male',
      age: 38,
    },
    {
      id: 'e1bf46ab-7168-491e-925e-f01e21394812',
      name: 'Sheree Anthony',
      email: 'shereeanthony@kog.com',
      eyeColor: 'brown',
      friends: ['Goldie Gentry', 'Briana Decker'],
      isActive: true,
      balance: 2764,
      skills: ['lorem', 'veniam', 'culpa'],
      gender: 'female',
      age: 39,
    },
];
 
// –û—Ç—Ä–∏–º–∞—Ç–∏; –º–∞—Å–∏–≤; —ñ–º–µ–Ω; –≤—Å—ñ—Ö; –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤(–ø–æ–ª–µ, name).
// –û—Ç—Ä–∏–º–∞—Ç–∏ –º–∞—Å–∏–≤ —ñ–º–µ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ —Å—Ç–∞—Ç—Ç—é (–ø–æ–ª–µ gender).

// const getUserNames = users => users.map(({name}) => name);
// console.log(getUserNames(users));
  


// const getUsersWithGender = (users, gender) => users.filter(user => user.gender === gender).map(user => user.name);
// const getUsersWithGender = (users, gender) => users.filter(({gender: genderName}) => genderName === gender).map(({name}) => name);
// console.log(getUsersWithGender(users, 'male'));

// ======================================================================

// –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–Ω–µ –º–∞—Å–∏–≤) –ø–æ email (–ø–æ–ª–µ email, –≤—ñ–Ω —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π).

// const getUserWithEmail = (users, email) =>
//   users.find(({ email: userEmail }) => userEmail === email)?.name;
//   //?. –æ–ø–µ—Ä–∞—Ç–æ—Ä –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—ó –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ
//   //https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/Optional_chaining

// console.log(getUserWithEmail(users, "shereeanthony@kog.com")); // {–æ–±'—î–∫—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ Sheree Anthony}
// console.log(getUserWithEmail(users, "elmahead@omatom.com")); // {–æ–±'—î–∫—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ Elma Head}

// console.log(getUserWithEmail(users, "elmahead@oqwertymatom.com")); // {–æ–±'—î–∫—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ Elma Head}

// =======================================================================

// –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –±–∞–ª–∞–Ω—Å—É (–ø–æ–ª–µ balance) –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.

// const calculateTotalBalance = users => { };

// –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –±–∞–ª–∞–Ω—Å—É (–ø–æ–ª–µ balance) –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.

// const calculateTotalBalance = (users) =>
//   users.reduce((acc, { balance }) => acc + balance, 0);

// console.log(calculateTotalBalance(users)); // 20916

// ==================================================================


// –ú–∞—Å–∏–≤ —ñ–º–µ–Ω (–ø–æ–ª–µ name) –ª—é–¥–µ–π, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏—Ö –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —ó—Ö –¥—Ä—É–∑—ñ–≤ (–ø–æ–ª–µ friends)
// const getNamesSortedByFriendsCount = users => {
//   return [...users]
//     .sort((a, b) => a.friends.length - b.friends.length)
//     .map(({ name }) => name);
// };

// console.log(getNamesSortedByFriendsCount(users));
// [ 'Moore Hensley', 'Sharlene Bush', 'Elma Head', 'Carey Barr', 'Blackburn Dotson', 'Sheree Anthony', 'Ross Vazquez' ]

// ===================================================================

